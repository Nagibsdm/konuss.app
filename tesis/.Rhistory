wb <- read_excel("Downloads/WB.xlsx")
summary(wb)
wb <- wb%>%
slice(1:232)
wb%>%
select(1,2,3,4)
2+2
leo=gay
leo=2+2
leox <- forbes2000
forbes
library(xts)
library(highfrequency)
library(tseries)
library(fBasics)
l
library(tidyquant)
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
getSymbols("^MERV", from = '2010-01-01',
to = "2022-04-14",warnings = FALSE,
auto.assign = TRUE)
View(MERV)
MERV%
ls()
head(GSPC)
d(MERV)
tail(MER
head(MERV)
tail(MERV)
head(MERV)
MERV<-MERV[complete.cases(MERV),]
dim(MERV)
View(MERV)
head(bitcoin)
class(MERV)
plot(merv$Close)
plot(merv$merv.Close)
plot(MERV$MERV.Close)
r_t<-makeReturns(MERV$MERV.Adjusted)
N<-length(r_t)
MERV$OVR<-0
library(dplyr)
select(MERV$MERV.Volume)
View(MERV)
View(MERV)
dplyr::select(MERV)
rename(MERV)
MERV$MERV.Open <- open
MERV$MERV.Open <- rename(open)
MERV$MERV.Open <- 0
View(MERV)
library(xts)
library(highfrequency)
library(tseries)
library(fBasics)
library(tidyquant)
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
getSymbols("^MERV", from = '2010-01-01',
to = "2021-09-24",warnings = FALSE,
auto.assign = TRUE)
View(MERV)
names(MERV) <- c("opne", "high")
names(MERV) <- c("opne", "high", "low", "close", "volume", "adj.close")
View(MERV)
names(MERV) <- c("OPEN", "HIGH", "LOW", "CLOSE", "VOLUME", "ADJ.CLOSE")
View(MERV)
MERV <- MERV[-6]
MERV <- MERV[+6]
MERV <- MERV[-6]
View(MERV)
getSymbols("^MERV", from = '2010-01-01',
to = "2021-09-24",warnings = FALSE,
auto.assign = TRUE)
names(MERV) <- c("OPEN", "HIGH", "LOW", "CLOSE", "VOLUME", "ADJ.CLOSE")
View(MERV)
MERV <- MERV[,-6]
View(MERV)
MERV <- MERV[,-5]
getSymbols("^MERV", from = '2010-01-01',
to = "2021-09-24",warnings = FALSE,
auto.assign = TRUE)
names(MERV) <- c("OPEN", "HIGH", "LOW", "CLOSE", "VOLUME", "ADJ.CLOSE")
MERV <- MERV[,-5]
merv<-MERV[complete.cases(MERV),]
dim(bitcoin)
dim(merv)
plot(merv$CLOSE)
r_t<-makeReturns(merv$ADJ.CLOSE)
N<-length(r_t)
merv$OVR<-0
merv$OVR<-log(merv$OPEN/(lag(merv$CLOSE))) #overnight returns
merv$OVR<-log(merv$OPEN/(lag(merv$CLOSE)) #overnight returns
head(bitcoin_i)
merv$OVR<-0
View(merv)
merv$OVR<-log(merv$OPEN/(lag(merv$CLOSE)) #overnight returns
merv$OVR[1]<-0
merv$OVR<-log(merv$OPEN/(lag(merv$CLOSE))
merv$OVR[1]<-0
merv$OVR<-0
merv$OVR <- log(merv$OPEN/(lag(merv$CLOSE)) #overnight returns
merv$OVR <- log(merv$OPEN/(lag(merv$CLOSE)) #overnight returns
merv$OVR <- log(merv$OPEN/(lag(merv$CLOSE)) #overnight returns
merv$OVR <- log(merv$OPEN/(lag(merv$CLOSE))
merv$OVR <- log(merv$OPEN/(lag(merv$CLOSE)))
r_t<-makeReturns(merv$ADJ.CLOSE)
N<-length(r_t)
merv$OVR<-0
merv$OVR <- log(merv$OPEN/(lag(merv$CLOSE)))
merv$OVR[1]<-0
merv$OVR <- log(merv$OPEN/(lag(merv$CLOSE)))
merv$OVR<-0
merv$OVR.<-0
merv$OVR. <- log(merv$OPEN/(lag(merv$CLOSE)))
merv$OVR[1]<-0
merv$OVR[1]<-200
merv$OVR<-0
merv$OVR <- log(merv$OPEN/(lag(merv$CLOSE)))
merv$OVR <- log(merv$OPEN/(lag(merv$CLOSE))
merv$OVR[1]<-200
head(bitcoin_i)
merv$OVR <- log(merv$OPEN/(lag(merv$CLOSE)))
MERV$OVR<-0
MERV$OVR <- log(merv$OPEN/(lag(merv$CLOSE)))
merv$OVR[1]<-200
getSymbols("^MERV", from = '2010-01-01',
to = "2021-09-24",warnings = FALSE,
auto.assign = TRUE)
ls()
merv<-MERV[complete.cases(MERV),]
dim(merv)
names(MERV) <- c("OPEN", "HIGH", "LOW", "CLOSE", "VOLUME", "ADJ.CLOSE")
MERV <- MERV[,-5]
plot(merv$CLOSE)
r_t<-makeReturns(merv$ADJ.CLOSE)
plot(merv$CLOSE)
merv<-MERV[complete.cases(MERV),]
dim(merv)
r_t<-makeReturns(merv$ADJ.CLOSE)
N<-length(r_t)
MERV$OVR<-0
MERV$OVR <- log(merv$OPEN/(lag(merv$CLOSE)))
merv$OVR[1]<-200
head(bitcoin_i)
plot(r_t)
boxplot(coredata(r_t))
plot(r_t, main="BITCOIN",col="red")
boxplot(coredata(r_t),col="yellow",main="Bitcoin")
par(mfrow=c(2,1))
acf(coredata(r_t))
library(xts)
library(highfrequency)
library(tseries)
library(fBasics)
library(tidyquant)
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
getSymbols("^MERVC", from = '2010-01-01',
to = "2022-04-15",warnings = FALSE,
auto.assign = TRUE)
getSymbols("^MERV", from = '2010-01-01',
to = "2022-04-15",warnings = FALSE,
auto.assign = TRUE)
ls()
head(MERV)
tail(MERV)
range(time(MERV))
class(MERV)
View(MERV)
merv_i <- MERV
plot(merv_i$MERV.Close)
r_t<-makeReturns(merv_i$MERV.Adjusted)
N<-length(r_t)
bitcoin_i$OVR<-0
merv_i$OVR<-0
bitcoin_i$OVR<-log(bitcoin_i$Open/(lag(bitcoin_i$Close))) #overnight returns
bitcoin_i$OVR<-log(merv_i$MERV.Open/(lag(merv_i$MERV.Close))) #overnight returns
MERV <- MERV[,-5]
View(MERV)
MERV <- c("OPEN","HIGH","LOW", "CLOSE", "ADJ.CLOSE")
NAMES(MERV) <- c("OPEN","HIGH","LOW", "CLOSE", "ADJ.CLOSE")
MERV <- MERV[,-5]
getSymbols("^MERV", from = '2010-01-01',
+            to = "2022-04-15",warnings = FALSE,
+            auto.assign = TRUE)
library(xts)
> library(highfrequency)
> library(tseries)
> library(fBasics)
> library(tidyquant)
> options("getSymbols.warning4.0"=FALSE)
> options("getSymbols.yahoo.warning"=FALSE)
> getSymbols("^MERVC", from = '2010-01-01',
+            to = "2022-04-15",warnings = FALSE,
+            auto.assign = TRUE)
library(xts)
> library(highfrequency)
> library(tseries)
> library(fBasics)
library(xts)
library(xts)
library(highfrequency)
library(tseries)
library(fBasics)
library(tidyquant)
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
getSymbols("^MERVC", from = '2010-01-01',
to = "2022-04-15",warnings = FALSE,
auto.assign = TRUE)
library(xts)
library(highfrequency)
library(tseries)
library(fBasics)
library(tidyquant)
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
getSymbols("^MERVC", from = '2010-01-01',
to = "2022-04-15",warnings = FALSE,
auto.assign = TRUE)
getSymbols("^MERVC", from = '2010-01-01',
to = "2022-04-15",warnings = FALSE,
auto.assign = TRUE)
getSymbols("^MERV", from = '2010-01-01',
to = "2022-04-15",warnings = FALSE,
auto.assign = TRUE)
names(MERV) <- c("OPEN", "HIGH", "LOW", "CLOSE", "VOLUME", "ADJ.CLOSE")
View(MERV)
MERV <- MERV[,-5]
View(MERV)
save(MERV)
View(MERV)
View(MERV)
View(MERV)
save(MERV, )
save(MERV)
write.xlsx2(MERV, file, sheetName = "Sheet1", col.names = TRUE,
row.names = TRUE, append = FALSE, showNA = TRUE, password = NULL)
write.xlsx(MERV, file, sheetName = "Sheet1", col.names = TRUE,
row.names = TRUE, append = FALSE, showNA = TRUE, password = NULL)
install.packages("xlsx")
library("xlsx")
write.xlsx(MERV, file, sheetName = "Sheet1", col.names = TRUE,
row.names = TRUE, append = FALSE, showNA = TRUE, password = NULL)
write.xlsx2(MERV, file, sheetName = "Sheet1", col.names = TRUE,
row.names = TRUE, append = FALSE, showNA = TRUE, password = NULL)
View(MERV)
save.image(file= "merv", MERV)
View(MERV)
View(MERV)
View(MERV)
merv
install.packages("learnr")
install.packages("learnr")
library(highfrequency)
library(tseries)
library(fBasics)
library(tidyquant)
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
getSymbols("^GSPC", from = '2010-01-01',
to = "2021-09-24",warnings = FALSE,
auto.assign = TRUE)
getSymbols("^MERV", from = '2010-01-01',
to = "2022-04-15",warnings = FALSE,
auto.assign = TRUE)
ls()
head(MERV)
tail(MERV)
MERV<-MERV[complete.cases(MERV),]
View(MERV)
names(MERV) <- c("OPEN","HIGH", "LOW", "CLOSE", "VOL", "ADJ.CLOSE")
MERV <- MERV[-5]
library(xts)
library(highfrequency)
library(tseries)
library(fBasics)
##################### Importing from Yahoo finance
library(tidyquant)
##
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
# Let us download S&P500
getSymbols("^MERV", from = '2010-01-01',
to = "2022-04-15",warnings = FALSE,
auto.assign = TRUE)
ls()
head(MERV)
tail(MERV)
MERV<-MERV[complete.cases(MERV),]
names(MERV) <- c("OPEN","HIGH", "LOW", "CLOSE", "VOL", "ADJ.CLOSE")
MERV <- MERV[,-5]
View(MERV)
MERV$OVR<-0
MERV$OVR<-log(MERV$OPEN/(lag(MERV$CLOSE))) #overnight returns
MERV$OVR[1]<-0
head(MERV)
r_t<-makeReturns(MERV$ADJ.CLOSE
)
N<-length(r_t)
skewness(r_t)
kurtosis(r_t)
qqnorm(r_t)
qqline(r_t, col = 2)
hist(r_t, freq = FALSE,ylim=c(0,18),breaks=40)
curve(dnorm(x, mean=mean(r_t), sd=sd(r_t)), add=TRUE,col=2)
Box.test(r_t,type="Ljung-Box",lag=5)
Box.test(r_t,type="Box-Pierce",lag=5)
Box.test(r_t^2,type="Ljung-Box",lag=5)
Box.test(r_t^2,type="Box-Pierce",lag=5)
jarque.bera.test(r_t)
library(xts)
library(highfrequency)
library(tseries)
library(fBasics)
library(rugarch) #install.packages("rugarch")
library(maxLik)
spec_arch_2 <- ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(2,0)),
mean.model=list(armaOrder=c(0,0), include.mean=FALSE),
distribution.model="norm")
fit<-ugarchfit(spec=spec_arch_2, data=r_t)
View(fit)
fit@fit$matcoef
round(fit@fit$matcoef,3)
round(coef(fit),3)
cond_vol_arch_2<-fit@fit$sigma
spec_arch_4 <- ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(4,0)),
mean.model=list(armaOrder=c(0,0), include.mean=FALSE),
distribution.model="norm")
fit<-ugarchfit(spec=spec_arch_4, data=r_t)
fit@fit$matcoef
round(fit@fit$matcoef,3)
round(coef(fit),3)
cond_vol_arch_4<-fit@fit$sigma
spec_garch_11 <- ugarchspec(variance.model=list(model="sGARCH", garchOrder=c(1,1)),
mean.model=list(armaOrder=c(0,0), include.mean=FALSE),
distribution.model="norm")
fit<-ugarchfit(spec=spec_garch_11, data=r_t)
names(fit@fit)
fit@fit$matcoef
round(fit@fit$matcoef,3)
round(coef(fit),3)
fit@fit$LLH
cond_vol_garch_11<-fit@fit$sigma
rv<-(MERV$OPEN^2)*100*252^0.5
mean(rv)
end_x<-endpoints(rv,on="years")
end_x<-end_x+c(rep(1,length(end_x)-1),0)
end_x<-end_x[-length(end_x)]
beg_rec_1<-first(which(
format(as.Date(time(rv)), "%Y-%m")=="2001-03"))
end_rec_1<-last(which(
format(as.Date(time(rv)), "%Y-%m")=="2001-11"))
beg_rec_2<-which(
format(as.Date(time(rv)), "%Y-%m")=="2007-12")[1]
end_rec_2<-last(which(
format(as.Date(time(rv)), "%Y-%m")=="2009-06"))
View(rv)
plot(RV)
library(xts)
library(rumidas)
library(highfrequency)
library(forecast)
r_t_est<-r_t['2015/2021']
K<-48 # number of lagged realizations entering the long-run equation
MERV_mv<-mv_into_mat(r_t_est,MERV,K=K,"monthly")
MERV_mv<-mv_into_mat(r_t_est,MERV,K=K,"monthly")
MERV_mv<-mv_into_mat(r_t_est,MERV,"monthly")
MERV_mv<-mv_into_mat(r_t_est,MERV,"WEEKLY")
MERV_mv<-mv_into_mat(r_t_est,MERV, k=k,"monthly")
MERV_mv<-mv_into_mat(r_t_est,MERV,k=k,"monthly")
MERV_mv<-mv_into_mat(r_t_est,MERV,K=K,"monthly")
dim(nai_mv)
dim(MERV_mv)
View(r_t_est)
MERV_mv<-mv_into_mat(r_t_est,r_t,K=K,"monthly")
dim(MERV_mv)
length(r_t_est)
fit_gm<-ugmfit(model="GM",skew="NO",distribution="norm",
daily_ret=r_t_est,mv_m=MERV_mv,K=K)
fit_gm
summary.rumidas(fit_gm)
names(fit_gm)
fit_gm$inf_criteria
M1_vol<-fit_gm$est_vol_in_s
fit_gm_t<-ugmfit(model="GM",skew="NO",distribution="std",
daily_ret=r_t_est,mv_m=MERV_mv,K=K)
summary.rumidas(fit_gm_t)
M2_vol<-fit_gm_t$est_vol_in_s
fit_gm_s<-ugmfit(model="GM",skew="YES",distribution="norm",
daily_ret=r_t_est,mv_m=MERV_mv,K=K)
summary.rumidas(fit_gm_s)
M3_vol<-fit_gm_s$est_vol_in_s
fit_gm_s_t<-ugmfit(model="GM",skew="YES",distribution="std",
daily_ret=r_t_est,mv_m=nai_mv,K=K)
fit_gm_s_t<-ugmfit(model="GM",skew="YES",distribution="std",
daily_ret=r_t_est,mv_m=MERV_mv,K=K)
summary.rumidas(fit_gm_s_t)
M4_vol<-fit_gm_s_t$est_vol_in_s
fit_dagm<-ugmfit(model="DAGM",skew="NO",distribution="norm",
daily_ret=r_t_est,mv_m=MERV_mv,K=K)
summary.rumidas(fit_dagm)
M5_vol<-fit_dagm$est_vol_in_s
fit_dagm_t<-ugmfit(model="DAGM",skew="NO",distribution="std",
daily_ret=r_t_est,mv_m=MERV_mv,K=K)
summary.rumidas(fit_dagm_t)
M6_vol<-fit_dagm_t$est_vol_in_s
fit_dagm_s<-ugmfit(model="DAGM",skew="YES",distribution="norm",
daily_ret=r_t_est,mv_m=MERV_mv,K=K)
summary.rumidas(fit_dagm_s)
M7_vol<-fit_dagm_s$est_vol_in_s
fit_dagm_s_t<-ugmfit(model="DAGM",skew="YES",distribution="std",
daily_ret=r_t_est,mv_m=MERV_mv,K=K)
install.packages("~/Downloads/dccmidas_0.1.1.tar", repos = NULL)
read.csv("ˆSSMI.csv")
a <- a
a <- 0
\documentclass{article}
\begin{document}
\SweaveOpts{concordance=TRUE}
\begin{table}[ht]
\centering
\begin{tabular}{rl}
\hline
& x \\
\hline
sGARCH N & -3.786 \\
gjrGARCH N & -3.821 \\
eGARCH N & -3.827 \\
csGARCH N & -3.792 \\
sGARCH Std & -3.788 \\
gjrGARCH Std & -3.823 \\
eGARCH Std & -3.828 \\
csGARCH Std & -3.794 \\
GM N - U & -3.787 \\
GM-skew N - U & -3.825 \\
GM Std - U & -3.79 \\
GM-skew Std - U & -3.827 \\
DAGM N - U & -3.79 \\
DAGM-skew  N- U & -3.829 \\
GM N - Real GDP & -3.788 \\
GM-skew N - Real GDP & -3.825 \\
GM Std - Real GDP & -3.79 \\
GM-skew Std - Real GDP & -3.823 \\
DAGM N - Real GDP & -3.788 \\
DAGM N-skew - Real GDP & -3.823 \\
GM N - Bond Yields & -3.787 \\
GM-skew N - Bond Yields & -3.822 \\
GM Std - Bond Yields & -3.071 \\
DAGM N - Bond Yields & -3.788 \\
DAGM-skew N - Bond Yields & -3.823 \\
HS (w=250) & -3.608 \\
SAV & -3.795 \\
AS & cellcolor\{gray!75\}-3.839 \\
IG & -3.798 \\
Lin. ARCH & -3.782 \\
\hline
\end{tabular}
\end{table}
\end{document}
\end{document}
setwd("~/Desktop/tesis")
setwd("~/Desktop/tesis")
tesi <- read.csv("data.csv")
range(tesi)
library("xts")
library("highfrequency")
library("tseries")
library("fBasics")
library("rugarch")
library("maxLik")
library("rumidas")
library("dccmidas")
library("fpp2")
library("ggplot2")
library("rqmidas")
library("GGally")
library("GAS")
tesi<- read.csv("data.csv",
header = T,
sep = ",",
dec = ".",
na.strings="null")
Date_msft <- strptime(tesi[,1], "%Y-%m-%d",tz="GMT")
tesi_ts <- as.xts(msft[,2:ncol(msft)], Date_msft)
Date_tesi <- strptime(tesi[,1], "%Y-%m-%d",tz="GMT")
tesi_ts <- as.xts(tesi[,2:ncol(msft)], date_tesi)
View(Date_msft)
Date_tesi <- strptime(tesi[,1], "%Y-%m-%d",tz="GMT")
tesi_ts <- as.xts(tesi[,2:ncol(tesi)], date_tesi)
Date_tesi <- strptime(tesi[,1], "%Y-%m-%d",tz="GMT")
tesi_ts <- as.xts(tesi[,2:ncol(tesi)], Date_tesi)
##### Transform to Time series data the data set of the index
na.omit(tesi)
Date_tesi <- strptime(tesi[,1], "%Y-%m-%d",tz="GMT")
tesi_ts <- as.xts(tesi[,2:ncol(tesi)], Date_tesi)
View(tesi)
##### Transform to Time series data the data set of the index
na.omit(tesi)
View(tesi)
##### Transform to Time series data the data set of the index
na.exclude(tesi)
summary(tesi)
data <- %tesi%
Date_tesi <- strptime(tesi[,1], "%Y-%m-%d",tz="GMT")
data <- %tesi%
Date_tesi <- strptime(tesi[,1], "%Y-%m-%d",tz="GMT")
"time perios"
"time period"%
"TIME_PERIOS"%
